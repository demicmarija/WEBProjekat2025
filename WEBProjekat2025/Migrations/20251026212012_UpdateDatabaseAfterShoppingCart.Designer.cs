// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBProjekat2025.NewFolder2;

#nullable disable

namespace WEBProjekat2025.Migrations
{
    [DbContext(typeof(appDbContext))]
    [Migration("20251026212012_UpdateDatabaseAfterShoppingCart")]
    partial class UpdateDatabaseAfterShoppingCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WEBProjekat2025.Models.Aroma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aroma");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Arome_Pice", b =>
                {
                    b.Property<int>("AromaId")
                        .HasColumnType("int");

                    b.Property<int>("PiceId")
                        .HasColumnType("int");

                    b.HasKey("AromaId", "PiceId");

                    b.HasIndex("PiceId");

                    b.ToTable("Arome_Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Diskont", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diskont");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PiceId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Pice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("DiskontId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategorijaPica")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Proizvedeno")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.Property<string>("SlikaURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiskontId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Proizvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proizvodjac");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("PiceId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PiceId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Arome_Pice", b =>
                {
                    b.HasOne("WEBProjekat2025.Models.Aroma", "Aroma")
                        .WithMany("Arome_Pice")
                        .HasForeignKey("AromaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBProjekat2025.Models.Pice", "Pice")
                        .WithMany("Arome_Pice")
                        .HasForeignKey("PiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aroma");

                    b.Navigation("Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.OrderItem", b =>
                {
                    b.HasOne("WEBProjekat2025.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBProjekat2025.Models.Pice", "Pice")
                        .WithMany()
                        .HasForeignKey("PiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Pice", b =>
                {
                    b.HasOne("WEBProjekat2025.Models.Diskont", "Diskont")
                        .WithMany("Pica")
                        .HasForeignKey("DiskontId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBProjekat2025.Models.Proizvodjac", "Proizvodjac")
                        .WithMany("Pica")
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diskont");

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("WEBProjekat2025.Models.Pice", "Pice")
                        .WithMany()
                        .HasForeignKey("PiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Aroma", b =>
                {
                    b.Navigation("Arome_Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Diskont", b =>
                {
                    b.Navigation("Pica");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Pice", b =>
                {
                    b.Navigation("Arome_Pice");
                });

            modelBuilder.Entity("WEBProjekat2025.Models.Proizvodjac", b =>
                {
                    b.Navigation("Pica");
                });
#pragma warning restore 612, 618
        }
    }
}
